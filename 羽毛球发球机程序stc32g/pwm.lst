C251 COMPILER V5.60.0,  pwm                                                                03/08/23  21:13:36  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE pwm
OBJECT MODULE PLACED IN pwm.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE PWM\pwm.c XSMALL INTR2 WARNINGLEVEL(1) BROWSE INCDIR(.\OLED;.\timer;.\
                    -GPIO;.\PWM;.\Encoders;.\iic;.\Uart;.\Menu;.\motor;.\ADC;.\LineFollower;.\MPU6050;.\Key;.\Wave) DEBUG PRINT(.\pwm.lst) TA
                    -BS(2) OBJECT(pwm.obj) 

stmt  level    source

    1          #include "pwm.h"
    2          #include "motor.h"
    3          
    4          //变量声明区
    5          
    6          int dutyL = 0;
    7          int dutyR = 0;
    8          
    9          void PWMA_Config(void)
   10          {
   11   1        PWMA_PS = 0x0a;                     //PWM1P引脚切换到P6.0 P6.2
   12   1        
   13   1        PWMA_PSCRH = (uint)(PWM_PSC >> 8);
   14   1        PWMA_PSCRL = (uint)(PWM_PSC);         //119+1=120预分频
   15   1        
   16   1        PWMA_CCER1 = 0x00;                  // 写 CCMRx 前必须先清零 CCERx 关闭通道
   17   1        PWMA_CCMR1 = 0x60;                  // 设置 CC1 为 PWMA 输出模式，PWM模式1
   18   1        PWMA_CCMR2 = 0x60;                  // 设置 CC2 为 PWMA 输出模式，PWM模式1
   19   1        PWMA_CCER1 = 0x11;                  // 使能 CC1 CC2通道
   20   1        
   21   1        PWMA_CCR1H = (uint)(PWM_PERIOD >> 8);// 设置初始占空比100
   22   1        PWMA_CCR1L = (uint)(PWM_PERIOD); 
   23   1        
   24   1        PWMA_CCR2H = (uint)(PWM_PERIOD >> 8);// 设置初始占空比100
   25   1        PWMA_CCR2L = (uint)(PWM_PERIOD); 
   26   1        
   27   1        PWMA_ARRH = (uint)(PWM_PERIOD >> 8); // 设置PWM周期
   28   1        PWMA_ARRL = (uint)(PWM_PERIOD); 
   29   1        
   30   1        PWMA_ENO = 0x05;                    // 使能 PWM1P 2p 端口输出
   31   1        PWMA_BKR = 0x80;                    // 使能主输出
   32   1        
   33   1        PWMA_CR1 = 0x01;                    // 启动PWM定时器
   34   1      }
   35          
   36          /*
   37          when sw = 1,duty = duty; 
   38          when sw = 0, motor can't work
   39          */
   40          
   41          void Update_duty(uchar sw,int PWMR,int PWML)                    //更新占空比函数
   42          {
   43   1        
   44   1        if(!sw)
   45   1        {
   46   2          PWML = 0;
   47   2          PWMR = 0;
   48   2        }
   49   1        
   50   1        if(PWMR < 0)
   51   1        {
   52   2          PWMR = -PWMR;
   53   2          MotorR_Reverse();
   54   2        }
   55   1        else 
   56   1          MotorR_Forward();
   57   1          
C251 COMPILER V5.60.0,  pwm                                                                03/08/23  21:13:36  PAGE 2   

   58   1        if(PWML < 0)
   59   1        {
   60   2          PWML = -PWML;
   61   2          MotorL_Reverse();
   62   2        }
   63   1        else 
   64   1          MotorL_Forward();
   65   1          
   66   1        
   67   1        PWMA_CCR1H  = (uchar)(PWML >> 8);  
   68   1        PWMA_CCR1L = PWML;                //调整占空比
   69   1          
   70   1        PWMA_CCR2H = (uchar)(PWMR >> 8); 
   71   1        PWMA_CCR2L = PWMR;  
   72   1      }
   73          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       240     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         4     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        12     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
