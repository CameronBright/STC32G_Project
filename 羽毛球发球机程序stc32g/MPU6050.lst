C251 COMPILER V5.60.0,  MPU6050                                                            31/07/23  20:20:46  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE MPU6050
OBJECT MODULE PLACED IN MPU6050.obj
COMPILER INVOKED BY: D:\Software\Worksoftware\Keil5_C251\C251\BIN\C251.EXE MPU6050\MPU6050.c XSMALL INTR2 WARNINGLEVEL(1
                    -) BROWSE INCDIR(.\OLED;.\timer;.\GPIO;.\PWM;.\Encoders;.\iic;.\Uart;.\Menu;.\motor;.\ADC;.\LineFollower;.\MPU6050;.\Key)
                    - DEBUG PRINT(.\MPU6050.lst) TABS(2) OBJECT(MPU6050.obj) 

stmt  level    source

    1          #include "main.h"
    2          #include "MPU6050.h"
    3          #include "timer.h"
    4          
    5          sbit    SCL = P3^6;   //IIC时钟引脚定义
    6          sbit    SDA = P3^7;   //IIC数据引脚定义
    7          
    8          void  InitMPU6050(void);  //初始化MPU6050
    9          void  Delay2us(void);
   10          void  I2C_Start(void);
   11          void  I2C_Stop(void);
   12          
   13          bit   I2C_RecvACK(void);
   14          
   15          void  I2C_SendByte(uchar dat);
   16          uchar   I2C_RecvByte(void);
   17          
   18          void  I2C_ReadPage(void);
   19          void  I2C_WritePage(void);
   20          uchar   Single_ReadI2C(uchar REG_Address);        //读取I2C数据
   21          void  Single_WriteI2C(uchar REG_Address,uchar REG_data);  //向I2C写入数据
   22          
   23          
   24          //I^C时序中延时设置，具体参见各芯片的数据手册  6050推荐最小1.3us 但是会出问题，这里延时实际1.9us左右
   25          void Delay2us(void)
   26          {
   27   1        uchar i;
   28   1        i = 7;    // @24MHZ, 6 + 33 = 39T, 1.625us
   29   1        while (--i);
   30   1      }
   31          
   32          void Delay50ms()    //@24.000MHz
   33          {
   34   1        unsigned char data i, j, k;
   35   1      
   36   1        _nop_();
   37   1        _nop_();
   38   1        i = 5;
   39   1        j = 144;
   40   1        k = 71;
   41   1        do
   42   1        {
   43   2          do
   44   2          {
   45   3            while (--k);
   46   3          } while (--j);
   47   2        } while (--i);
   48   1      }
   49          
   50          
   51          
   52          //**************************************
   53          //I2C起始信号
   54          //**************************************
   55          void I2C_Start(void)
   56          {
   57   1        Delay2us();                 //延时
C251 COMPILER V5.60.0,  MPU6050                                                            31/07/23  20:20:46  PAGE 2   

   58   1        Delay2us();                 //延时
   59   1        SDA = 1;                    //拉高数据线
   60   1        SCL = 1;                    //拉高时钟线
   61   1        Delay2us();                 //延时
   62   1        Delay2us();                 //延时
   63   1        SDA = 0;                    //产生下降沿
   64   1        Delay2us();                 //延时
   65   1        SCL = 0;                    //拉低时钟线
   66   1        Delay2us();                 //延时
   67   1      }
   68          
   69          //**************************************
   70          //I2C停止信号
   71          //**************************************
   72          void I2C_Stop(void)
   73          {
   74   1          Delay2us();                 //延时
   75   1          SDA = 0;                    //拉低数据线
   76   1          SCL = 1;                    //拉高时钟线
   77   1        Delay2us();                 //延时
   78   1          SDA = 1;                    //产生上升沿
   79   1        Delay2us();                 //延时
   80   1      }
   81          
   82          //**************************************
   83          //I2C接收应答信号
   84          //**************************************
   85          bit I2C_RecvACK(void)
   86          {
   87   1        SDA = 1;
   88   1        Delay2us();                 //延时
   89   1          SCL = 1;                    //拉高时钟线
   90   1          Delay2us();                 //延时
   91   1          CY = SDA;                   //读应答信号
   92   1          SCL = 0;                    //拉低时钟线
   93   1          Delay2us();                 //延时
   94   1          return CY;
   95   1      }
   96          
   97          //**************************************
   98          //向I2C总线发送一个字节数据
   99          //**************************************
  100          void I2C_SendByte(uchar dat)
  101          {
  102   1          uchar i;
  103   1          for (i=0; i<8; i++)         //8位计数器
  104   1          {
  105   2              dat <<= 1;              //移出数据的最高位
  106   2              SDA = CY;               //送数据口
  107   2              SCL = 1;                //拉高时钟线
  108   2              Delay2us();             //延时
  109   2              SCL = 0;                //拉低时钟线
  110   2              Delay2us();             //延时
  111   2          }
  112   1          I2C_RecvACK();
  113   1      }
  114          
  115          //**************************************
  116          //从I2C总线接收一个字节数据
  117          //**************************************
  118          uchar I2C_RecvByte(void)
  119          {
  120   1          uchar i;
  121   1          uchar dat = 0;
  122   1          SDA = 1;                    //使能内部上拉,准备读取数据,
  123   1          for (i=0; i<8; i++)         //8位计数器
C251 COMPILER V5.60.0,  MPU6050                                                            31/07/23  20:20:46  PAGE 3   

  124   1          {
  125   2              dat <<= 1;
  126   2              SCL = 1;                //拉高时钟线
  127   2              Delay2us();             //延时
  128   2              dat |= SDA;             //读数据
  129   2              SCL = 0;                //拉低时钟线
  130   2              Delay2us();             //延时
  131   2          }
  132   1          return dat;
  133   1      }
  134          
  135          //**************************************
  136          //向I2C设备写入一个字节数据
  137          //**************************************
  138          void Single_WriteI2C(uchar REG_Address,uchar REG_data)
  139          {
  140   1          I2C_Start();                  //起始信号
  141   1          I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
  142   1          I2C_SendByte(REG_Address);    //内部寄存器地址，
  143   1          I2C_SendByte(REG_data);       //内部寄存器数据，
  144   1          I2C_Stop();                   //发送停止信号
  145   1      }
  146          //**************************************
  147          //从I2C设备读取一个字节数据
  148          //**************************************
  149          /*
  150          uchar Single_ReadI2C(uchar REG_Address)
  151          {
  152            uchar REG_data;
  153            I2C_Start();                   //起始信号
  154            I2C_SendByte(SlaveAddress);    //发送设备地址+写信号
  155            I2C_SendByte(REG_Address);     //发送存储单元地址，从0开始
  156            I2C_Start();                   //起始信号
  157            I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
  158            REG_data=I2C_RecvByte();       //读出寄存器数据
  159            
  160            SDA = 1;                    //写应答信号
  161            SCL = 1;                    //拉高时钟线
  162            Delay2us();                 //延时
  163            SCL = 0;                    //拉低时钟线
  164            Delay2us();                 //延时
  165            
  166            I2C_Stop();                    //停止信号
  167            return REG_data;
  168          }
  169          */
  170          
  171          //**************************************
  172          //初始化MPU6050
  173          //**************************************
  174          void InitMPU6050(void)
  175          {
  176   1        //P2n_open_drain(0x30); //P2.4 -- SDA,   P2.5 -- SCL
  177   1        Delay2us();
  178   1        Delay2us();
  179   1        Delay2us();
  180   1        Delay2us();
  181   1        
  182   1        Single_WriteI2C(PWR_MGMT_1, 0x80);  //上电复位
  183   1        Delay50ms();                        //延时一段时间后再上电
  184   1        Single_WriteI2C(PWR_MGMT_1, 0x00);  //解除休眠状态
  185   1        Single_WriteI2C(SMPLRT_DIV, 0x07);  //陀螺仪125hz
  186   1        Single_WriteI2C(CONFIG, 0x04);      //21HZ滤波 延时A8.5ms G8.3ms  此处取值应相当注意，延时与系统周期相近
             -为宜
  187   1        Single_WriteI2C(GYRO_CONFIG, 0x08); //陀螺仪500度/S 65.5LSB/g
  188   1        Single_WriteI2C(ACCEL_CONFIG, 0x08);//加速度+-4g  8192LSB/g
C251 COMPILER V5.60.0,  MPU6050                                                            31/07/23  20:20:46  PAGE 4   

  189   1      }
  190          
  191          //**************************************
  192          //合成数据
  193          //**************************************
  194          /*
  195          int GetData(uchar REG_Address)
  196          {
  197            char H,L;
  198            H = Single_ReadI2C(REG_Address);
  199            L = Single_ReadI2C(REG_Address+1);
  200          //  return (H<<8)+L;   //合成数据
  201            return (((uint)H << 8) + L);   //合成数据
  202          }
  203          */
  204          
  205          void Read_MPU6050(uchar *buf)
  206          {
  207   1        uchar i;
  208   1        
  209   1        I2C_Start();                  //起始信号
  210   1        I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
  211   1        I2C_SendByte(ACCEL_XOUT_H);    //内部寄存器地址，
  212   1        I2C_Start();                   //起始信号
  213   1        I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
  214   1        for(i=0; i<13; i++)
  215   1        {
  216   2          buf[i] = I2C_RecvByte();       //读出寄存器数据
  217   2          SDA = 0;                    //写应答信号
  218   2          SCL = 1;                    //拉高时钟线
  219   2          Delay2us();                 //延时
  220   2          SCL = 0;                    //拉低时钟线
  221   2          Delay2us();                 //延时
  222   2        }
  223   1          buf[i] = I2C_RecvByte();  //最后一个字节
  224   1          SDA = 1;                    //写非应答信号
  225   1          SCL = 1;                    //拉高时钟线
  226   1          Delay2us();                 //延时
  227   1          SCL = 0;                    //拉低时钟线
  228   1          Delay2us();                 //延时
  229   1        I2C_Stop();                    //停止信号
  230   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       377     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------          1
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
